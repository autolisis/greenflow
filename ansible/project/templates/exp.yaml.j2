---
# vim: set ft=yaml:
- name: Patch Prometheus CRD
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Update Prometheus CRD and Re-enable monitoring
      k8s:
        state: present
        definition:
          api: monitoring.coreos.com/v1
          kind: Prometheus
          metadata:
            namespace: default
            name: kp-kube-prometheus-stack-prometheus
          spec:
            externalLabels:
              deployment_started_ts: "{{ deployment_started_ts }}"
              experiment_started_ts: "{{ experiment_started_ts }}"
            remoteWrite:
              - url: "{{ lookup('ansible.builtin.env', 'EXPERIMENT_STORAGE_URL') }}"
            replicas: 1

    - name: Wait for the specified number of replicas to become ready
      k8s_info:
        api: monitoring.coreos.com/v1
        kind: Prometheus
        name: kp-kube-prometheus-stack-prometheus
        namespace: default
      register: deployment_info
      until: deployment_info.resources[0].status.availableReplicas == deployment_info.resources[0].spec.replicas
      retries: 20
      delay: 2
# {% if 'kafka' in exp_name  %}
#     - name: Disable redpanda
#       k8s:
#         state: present
#         definition:
#           api: apps/v1
#           kind: StatefulSet
#           metadata:
#             namespace: redpanda
#             name: redpanda
#           spec:
#             replicas: 0
# {% elif 'redpanda' not in exp_name %}
#     - name: Disable redpanda
#       k8s:
#         state: present
#         definition:
#           api: apps/v1
#           kind: StatefulSet
#           metadata:
#             namespace: redpanda
#             name: redpanda
#           spec:
#             replicas: 0
# {% endif %}

- name: Deploy EXP
  hosts: localhost
  connection: local
  gather_facts: false
  roles:
    - "{{ exp_name }}"

- name: Wrap up Experiment
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
{% if 'ingest' not in exp_name  %}
    - name: Wait for execution to finish
      shell: kubectl wait execution "{{ exp_name }}" --for=jsonpath='{.status.executionState}'=Finished --timeout=1h

    - name: Delete any past experiment
      kubernetes.core.k8s:
        state: absent
        api_version: theodolite.rocks/v1beta1
        kind: execution
        namespace: default
        name: "{{ exp_name }}"
{% else %}
    - name: Sleep for 5 minutes
      pause:
        seconds: 300
    - name: Delete Load generator deployment
      kubernetes.core.k8s:
        state: absent
        api_version: apps/v1
        kind: Deployment
        namespace: default
        name: titan-ccp-load-generator
{% endif %}

    - name: Scale down Prometheus to 0
      k8s:
        state: present
        definition:
          api: monitoring.coreos.com/v1
          kind: Prometheus
          metadata:
            namespace: default
            name: kp-kube-prometheus-stack-prometheus
          spec:
            replicas: 0

    - name: Give it 10 seconds to cool down
      pause:
        seconds: 10

    - name: Delete input topic
      command: kubectl run -it --image redpandadata/redpanda --rm test -- -X brokers={{ exp_params.kafka_bootstrap_servers }} topic delete input
      ignore_errors: true

    - name: Delete output topic
      command: kubectl run -it --image redpandadata/redpanda --rm test -- -X brokers={{ exp_params.kafka_bootstrap_servers }} topic delete input
      ignore_errors: true
