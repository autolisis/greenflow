// For format details, see https://aka.ms/vscode-remote/devcontainer.json or the definition README at
// https://github.com/microsoft/vscode-dev-containers/tree/master/containers/docker-existing-dockerfile
{
	"name": "nix-devcontainer-greenflow",
	"dockerFile": "Dockerfile",
	"context": "${localWorkspaceFolder}",
	"build": {
		"args": {
			"USER_UID": "1000",
			"USER_GID": "1000"
		}
	},
	"runArgs": [
		"--network=host",
		"--security-opt",
		"label=disable"
	],
	"containerEnv": {
		"PRELOAD_EXTENSIONS": "arrterian.nix-env-selector"
	},
	"mounts": [
		"source=nix-cache,target=/nix,type=volume,consistency=cached"
	],
	"userEnvProbe": "loginShell",
	"overrideCommand": false,
	"updateRemoteUserUID": false,
	// build development environment on creation
	"onCreateCommand": "nix-shell --command 'echo done building nix dev environment'",
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		// select nix environment
		"arrterian.nix-env-selector",
		// nix formatting and dev support
		"jnoortheen.nix-ide",
		// run command on save (needed to reload nix environment)
		"fsevenm.run-it-on",
		// python support
		"ms-python.python",
		"redhat.vscode-yaml",
		"VisualStudioExptTeam.vscodeintellicode",
		"Rubymaniac.vscode-direnv"
	],
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": []
	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "go version",
}
